<settings>
  <developer_mode></developer_mode>                           <!-- [false] (true / false) If set to true, developer information is displayed. You can also copy developer information to clipboard through right click menu -->
  <projection>mercator</projection>                           <!-- [xy] (mercator, xy) Projection of your map. If you do not care about actual longitudes and latitudes I recommend to use xy projection. The default world map uses Mercator projection. -->  
  <width></width>                                             <!-- [] (Number) if empty, will be equal to width of your flash movie -->
  <height></height>                                           <!-- [] (Number) if empty, will be equal to height of your flash movie -->
  <font>Tahoma</font>                                         <!-- [Tahoma] (font name) use device fonts, such as Tahoma, Times New Roman, Tahoma, Verdana... -->
  <text_size>11</text_size>                                   <!-- [11] (Number) text size of all texts. Every text size can be set individually in the settings below -->
  <text_color></text_color>                                   <!-- [#000000] (hex color code) main text color. Every text color can be set individually in the settings below-->
  <decimals_separator></decimals_separator>                   <!-- [,] (string) decimal separator. Note, that this is for displaying data only. Decimals in data xml file must be separated with a dot -->
  <thousands_separator></thousands_separator>                 <!-- [ ] (string) thousand separator -->
  <redraw>true</redraw>                                       <!-- [false] (true / false) if redraw is set to true, the map will be resized then screen size changes -->
  <precision></precision>                                     <!-- [2] (Number) shows how many numbers should be shown after comma for calculated values (percents) -->
  <reload_data_interval></reload_data_interval>               <!-- [0] (Number) how often data should be reloaded (time in seconds) -->
  <add_time_stamp></add_time_stamp>                           <!-- [false] (true / false) if true, a unique number will be added every time flash loads data. This will help to avoid data cashing -->
  <color_change_time_start>0</color_change_time_start>         <!-- [2] (Number) How fast areas should change color after map is loaded -->
  <color_change_time_hover></color_change_time_hover>         <!-- [0.2] (Number) How fast areas and movies should change color on roll out -->
  <fit_to_screen></fit_to_screen>                             <!-- [true] (true / false) whether to resize map or not to fit it on screen -->
  <drag_map></drag_map>                                       <!-- [true] (true / false) whether map is dragable or not -->
  
  <background>                                                <!-- background -->
    <color></color>                                           <!-- [#444444] (hex color code) -->
    <alpha></alpha>                                           <!-- [0] (0 - 100) use 0 if you are using custom swf or jpg for background -->
    <border_color></border_color>                             <!-- [#000000] (hex color code) -->
    <border_alpha></border_alpha>                             <!-- [0] (0 - 100) -->
    <file></file>                                             <!-- [] (filename) swf or jpg file of a background. This file must be located in path/ folder (set in html file) -->                                                              
  </background>
  
  <zoom>                                                      <!-- zoom control -->
    <enabled>1</enabled>                                  <!-- [true] (true / false) whether to display zoom control or not -->
    <locked></locked>                                         <!-- [false] (true / false) whether it would be possible to drag zoom bar when dragging "home" icon -->
    <mouse_wheel_enabled></mouse_wheel_enabled>               <!-- [true] (true / false) whether to enable zooming with mouse wheel. Mouse wheel work only after user clicks somewhere on a flash. To workaround this issue, you have to add: onLoad="ammap.focus()" to your html <body> -->    
    <arrows_enabled>false</arrows_enabled>                    <!-- [true] (true / false) whether to display navigation arrows or not -->
    <home_link_enabled></home_link_enabled>                   <!-- [true] (true / false) whether to display home link or not (home link is only displayed if arrows are enabled) -->    
    <step_size></step_size>                                   <!-- [10] (Number) when moving map with navigation arrows, the map moves by step_size% of flash width or height -->
    <color></color>                                           <!-- [#990000] (hex color code) background color of "+", "-", scroller buttons and navigation arrows -->
    <color_hover></color_hover>                               <!-- [#CC0000] (hex color code) -->
    <alpha></alpha>                                           <!-- [100] (0 - 100) alpha of zoom control buttons -->
    <outline_color>#FF9900</outline_color>                           <!-- [#FFFFFF] -->
    <outline_alpha></outline_alpha>                           <!-- [100] (0 - 100) -->
    <x></x>                                                   <!-- [15] (Number or Number%) x position of zoom control --> 
    <y></y>                                                   <!-- [15] (Number or Number%) y position of zoom control -->
    <height></height>                                         <!-- [200] (Number or Number%) zoom control height -->
    <min></min>                                               <!-- [] (Number%) minimum zoom. if left empty, the minimum value will be calculated automaticaly (to fit all the map to the stage) -->
    <max></max>                                               <!-- [2000%] (Number%) maximum zoom -->
    <grid_every></grid_every>                                 <!-- [100%] (Number%) zoom tool grid will will be displayed every "grid_every" value and the dragger height will be equal to the distance between two grids -->
    <time></time>                                             <!-- [1] time of zoom in seconds -->
    <effect></effect>                                         <!-- [easeout] (easeout / easein) zoom motion effect -->
    <rotate></rotate>                                         <!-- [false] (true / false) whether to rotate zoom control by 90 degrees or not. If set to true, zoom control becomes horizontal -->
    <background_zooms_to_top></background_zooms_to_top>       <!-- [false] (true / false) If this is set to true, clicking on background would be the same as clicking on "home" button -->    
  </zoom>
  
  <small_map>                                                 <!-- small map -->
    <enabled>false</enabled>                                  <!-- [true] (true / false) whether to display small map or not -->
    <locked></locked>                                         <!-- [false] (true / false) whether it would be possible to drag small map when dragging border of small map -->
    <active></active>                                         <!-- [true] (true / false) whether clicking on a small map will result position change of big map -->    
    <x></x>                                                   <!-- [] (Number or Number%) x position of small map. If not defined, will be aligned to right side --> 
    <y></y>                                                   <!-- [] (Number or Number%) y position of small map. If not defined, will be aligned to bottom -->
    <width></width>                                           <!-- [25%] (Number or Number%) width of small map (height is calculated automatically) -->
    <color></color>                                           <!-- [] (hex color code) leave empty if you want to keep original map color -->    
    <border_width></border_width>                             <!-- [5] (Number) -->
    <border_color></border_color>                             <!-- [#FFFFFF] (hex color code) -->
    <rectangle_color></rectangle_color>                       <!-- [#FFFFFF] (hex color code) color of rectangle, indicating active area on a small map -->
    <collapse_button_color></collapse_button_color>           <!-- [#000000] (hex color code) colapse button arrow color (background color is the same as small map border color) -->
    <collapse_button_position></collapse_button_position>     <!-- [BR] (BR / BL / TR / TL) BR - bottom right, BL - bottom left TR - top right TL - top left -->
  </small_map>
  
  <navigation_path>                                           <!-- navigation path -->
    <enabled>false</enabled>                                  <!-- [false] (true / false) whether to display navigation path or not -->
    <x></x>                                                   <!-- [70] (Number or Number%) x position of path --> 
    <y></y>                                                   <!-- [30] (Number or Number%) y position of path -->
    <color></color>                                           <!-- [#000000] (hex color code) path background color -->
    <alpha></alpha>                                           <!-- [0] (0 - 100) path background alpha --> 
    <padding></padding>                                       <!-- [0] (Number) horizontal padding of path buttons -->
    <text_color></text_color>                                 <!-- [#FFFFFF] (hex color code) -->
    <text_color_hover></text_color_hover>                     <!-- [#CC0000] (hex color code) -->
    <text_size></text_size>                                   <!-- [text_size] (Number) -->
    <separator></separator>                                   <!-- [] symbol which separates path entries -->
    <home_text></home_text>                                   <!-- [] (text) Home text -->
  </navigation_path>
  
  
  <area>                                                      <!-- areas are movie clips which are already in map swf file, usualy countries. areas should be listed in data file -->                                                              
    <balloon_text>                                                    
      <![CDATA[{value} people live in {title}]]>              <!-- [] ({title} {value} {percents} {description}) You can add your own HTML formated text (only some of html tags are supported) -->
    </balloon_text>
    <active_only_if_value_set>true</active_only_if_value_set> <!-- [false] (true / false) if set to true, areas (countries) without defined value in data file will not display balloon and will not change color on roll over -->
    <color_solid></color_solid>                               <!-- [#990000] (hex color code) color of area with highest value-->
    <color_light>#FFFFFF</color_light>                               <!-- [#FFCC00] (hex color code) color of areas with value = 0 or value is not set -->
    <color_hover>#CC0000</color_hover>                        <!-- [] (hex color code) -->
    <color_selected></color_selected>                          <!-- [] (hex color code) If not specified, original area color will be used -->
    <disable_when_clicked>true</disable_when_clicked>         <!-- [false] (true / false) if this area is currently selected, roll over and click events of this area will be disabled if this set to true -->    
  </area>
  
  <movie>                                                     <!-- movies are swf, jpg, gif or png files which you load on top of a map or on stage. You should define your movies in data file -->
    <balloon_text>                                            
      <![CDATA[{title}]]>                                     <!-- [] ({title} {value} {description}) You can add your own HTML formated text (only some of html tags are supported) -->
    </balloon_text> 
    <active_only_if_value_set></active_only_if_value_set>     <!-- [false] (true / false) if set to true, movies without defined value in data file will not display balloon and will not change color on roll over -->
    <disable_when_clicked>true</disable_when_clicked>         <!-- [false] (true / false) if this area is currently selected, roll over and click events of this area will be disabled if this set to true -->
  </movie>
  
  <label>                                                     <!-- labels are texts which you set in data file. labels can be bounded to a map or placed on stage -->
    <balloon_text>                                            
      <![CDATA[]]>                                            <!-- [] ({title} {value} {description}) You can add your own HTML formated text (only some of html tags are supported) -->
    </balloon_text>
    <bg_margins_horizontal></bg_margins_horizontal>           <!-- [10] if your labels have background, then this parameter sets horizontal margins of background box -->
    <bg_margins_vertical></bg_margins_vertical>               <!-- [10] if your labels have background, then this parameter sets vertical margins of background box -->    
  </label>

  <line>                                                      <!-- you can bound lines to a map or draw them on the stage. LInes are defined in data file -->
    <color></color>                                           <!-- [#990000] (hex color code) default line color -->                                                                
    <alpha></alpha>                                           <!-- [100] (Number) default line alpha -->      
    <width></width>                                           <!-- [0] (Number) default line width  -->
    <dashed></dashed>                                         <!-- [false] (true / false) dashed lines are recommended only for stage lines, not for lines inside a map -->
    <arrow></arrow>                                           <!-- [] (end / start / middle / both) arrow position --> 
    <arrow_size></arrow_size>                                 <!-- [8] (Number) arrow size --> 
    <arrow_color></arrow_color>                               <!-- [] (line.color) default arrow color. If empty, is the same as line color -->
    <arrow_alpha></arrow_alpha>                               <!-- [100] (0 - 100) arrow alpha -->
    <curved></curved>                                         <!-- [false] (true / false) If this is set to true, the lines will be "smoothed". The lines will be smoothed only if they have at least 3 points. You can set curved="true" or curved="false" for individual line in the data file -->
  </line>
  
  <legend>                                                    <!-- LEGEND -->
    <enabled></enabled>                                       <!-- [true] (true / false) -->
    <x></x>                                                   <!-- [20] (Number / Number% / !Number)  -->
    <y></y>                                                   <!-- [!55] (Number / Number% / !Number)  -->
    <width></width>                                           <!-- [] (Number / Number%) -->
    <max_columns></max_columns>                               <!-- [] (Number) the maximum number of columns in the legend -->    
    <color></color>                                           <!-- [#FFFFFF] (hex color code) -->
    <alpha></alpha>                                           <!-- [50] (0 - 100) background opacity -->
    <border_color></border_color>                             <!-- [#000000] (hex color code) border color -->
    <border_alpha></border_alpha>                             <!-- [30] (0 - 100) border alpha -->
    <text_color></text_color>                                 <!-- [text_color] (hex color code) -->   
    <text_size></text_size>                                   <!-- [text_size] (Number) -->
    <spacing></spacing>                                       <!-- [10] (Number) vertical and horizontal gap between legend entries -->
    <margins></margins>                                       <!-- [10] (Number) legend margins (space between legend border and legend entries, recommended to use only if legend border is visible or background color is different from chart area background color) -->
    <key>                                                     <!-- KEY (the color box near every legend entry) -->
      <size></size>                                           <!-- [16] (Number) key size-->
      <border_color></border_color>                           <!-- [] (hex color code) leave empty if you don't want to have border -->
    </key>    
    <entries>                                                 <!-- legend entries go gere-->
      <!-- <entry color="#3366CC">Some title</entry>  -->     <!-- You can have any number of legend entries, uncomment this line and copy as many times as you need -->
    </entries>
  </legend>
  
  <object_list>                                               <!-- OBJECT LIST -->
    <enabled></enabled>                                       <!-- [false] (true / false) -->
    <type></type>                                             <!-- [dropdown] (dropdown / listbox) -->
    <levels></levels>                                         <!-- [3] (Number) How many levels of objects should be included in the list. You can exclude individual objects from a list by setting object_list="false" in the object's settings in data file. -->
    <include_areas></include_areas>                           <!-- [true] (true / false) whether areas must be included in a list -->
    <include_movies></include_movies>                         <!-- [true] (true / false) whether movies must be included in a list -->
    <include_labels></include_labels>                         <!-- [true] (true / false) whether labels must be included in a list -->
    <x></x>                                                   <!-- [!200] (Number / Number% / !Number) -->
    <y></y>                                                   <!-- [0] (Number / Number% / !Number)-->
    <width></width>                                           <!-- [200] (Number / Number%) -->
    <height></height>                                         <!-- [100%] (Number / Number%) -->    
    <color></color>                                           <!-- [#FFFFFF] (hex color code) Background color-->
    <color_hover></color_hover>                               <!-- [#DADADA] (hex color code) background color of a list item when mouse is over it -->
    <color_selected></color_selected>                         <!-- [#000000] (hex color code) background color of a selected list item -->
    <alpha></alpha>                                           <!-- [100] (0 - 100) background opacity -->
    <border_color></border_color>                             <!-- [#DADADA] (hex color code) -->
    <border_alpha></border_alpha>                             <!-- [100] (0 - 100) border opacity -->
    <text_color></text_color>                                 <!-- [text_color] (hex color code) -->
    <text_color_hover></text_color_hover>                     <!-- [#000000] (hex color code) -->
    <text_color_selected></text_color_selected>               <!-- [#FFFFFF] (hex color code) -->   
    <text_size></text_size>                                   <!-- [text_size] (Number) -->
    <scroller_color></scroller_color>                         <!-- [#990000] (hex color code) -->
    <scroller_bg_color></scroller_bg_color>                   <!-- [#DADADA] (hex color code) -->
  </object_list>  

  
  <text_box>                                                  <!-- text box is displayed when user clicks on an object and the object contains description. You can disable text box for individual objects in data file -->
    <enabled></enabled>                                       <!-- [true] (true / false) -->
    <locked></locked>                                         <!-- [false] (true / false) whether it would be possible to drag text box -->
    <show_on_hover></show_on_hover>                           <!-- [false] (true / false) text box can be showed on roll over too - set this parameter to "true" -->
    <hide_on_roll_out></hide_on_roll_out>                     <!-- [false] (true / false) if text box is showed on roll over, it can be hidden on roll out -->    
    <x></x>                                                   <!-- [60%] (Number or Number%) x position of text box. You can set individual x position for every object in data file -->
    <y></y>                                                   <!-- [20%] (Number or Number%) y position of text box. You can set individual y position for every object in data file -->
    <width></width>                                           <!-- [35%] (Number or Number%) text box width. You can set individual width for every movie or area -->
    <height></height>                                         <!-- [40%] (Number or Number%) text box height. You can set individual height for every movie or area -->
    <color></color>                                           <!-- [#FFFFFF] (hex color code) background color -->
    <alpha></alpha>                                           <!-- [100] (0 - 100) background alpha -->
    <shadow_color></shadow_color>                             <!-- [#000000] (hex color code) shadow color -->
    <shadow_alpha></shadow_alpha>                             <!-- [50] (0 - 100) shadow alpha -->
    <shadow_blur></shadow_blur>                               <!-- [5] (Number) shadow bluriness -->
    <shadow_distance></shadow_distance>                       <!-- [5] (Number) shadow distance -->
    <corner_radius>7</corner_radius>                           <!-- [0] (Number) corner radius -->
    <border_width></border_width>                             <!-- [0] (Number) border width -->
    <border_color></border_color>                             <!-- [#DADADA] (hec color code) border color -->
    <border_alpha></border_alpha>                             <!-- [100] (Number) border alpha -->
    <margin_width></margin_width>                             <!-- [10] (Number) margin width -->
    <text_size></text_size>                                   <!-- [text_size] (Number) -->
    <text_color></text_color>                                 <!-- [text_color] (hex color code) -->
    <close_button_color></close_button_color>                 <!-- [#000000] (hex color code) -->
    <close_button_color_hover></close_button_color_hover>     <!-- [#CC0000] (hex color code) -->
    <scroller_color></scroller_color>                         <!-- [#990000] -->
    <scroller_bg_color></scroller_bg_color>                   <!-- [#DADADA] -->
  </text_box>
  
  <balloon>                                                   <!-- balloon is shown when user roll overs the objects -->
    <enabled></enabled>                                       <!-- [true] (true / false) -->
    <max_width></max_width>                                   <!-- [30%] (Number or Number%) -->                                  
    <color>#FFFFFF</color>                                    <!-- [#880000] (hex color code) balloon background color -->
    <alpha>70</alpha>                                         <!-- [100] (0 - 100) -->
    <text_color>#000000</text_color>                          <!-- [0xFFFFFF] (hex color code) -->
    <text_size></text_size>                                   <!-- [text_size] (Number) -->
    <border_color>#CC0000</border_color>                      <!-- [balloon.color] (hex color code) -->
    <border_alpha>90</border_alpha>                          <!-- [balloon.alpha] (0 - 100) -->
    <border_width>2</border_width>                            <!-- [0] (Number) -->
    <corner_radius>5</corner_radius>                          <!-- [0] (Number) -->
    <arrow></arrow>                                           <!-- [vertical] (vertical / horizontal) balloon's arrow position -->
  </balloon>

  <export_as_image>                                           <!-- export_as_image feature works only on a web server -->
    <file></file>                                             <!-- [] (filename) if you set filename here, context menu (then user right clicks on flash movie) "Export as image" will appear. This will allow user to export map as an image. Collected image data will be posted to this file name (use ammap/export.php or ammap/export.aspx) -->
    <target></target>                                         <!-- [] (_blank, _top ...) target of a window in which export file must be called -->
    <x></x>                                                   <!-- [0] (Number) x position of "Collecting data" text -->
    <y></y>                                                   <!-- [] (Number) y position of "Collecting data" text. If not set, will be aligned to the bottom of flash movie -->
    <color></color>                                           <!-- [#BBBB00] (hex color code) background color of "Collecting data" text -->
    <alpha></alpha>                                           <!-- [0] (0 - 100) background alpha -->
    <text_color></text_color>                                 <!-- [text_color] (hex color code) -->
    <text_size></text_size>                                   <!-- [text_size] (Number) -->
  </export_as_image>  
    
  <strings>                                                
    <loading_map></loading_map>                               <!-- [Loading map] (text) -->
    <export_as_image></export_as_image>                       <!-- [Export as image] (text) text for right click menu -->
    <collecting_data></collecting_data>                       <!-- [Collecting data] (text) this text is displayed while exporting map to an image -->    
  </strings>
</settings>
